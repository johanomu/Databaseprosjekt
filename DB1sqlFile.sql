CREATE TABLE Customer (customerID INTEGER PRIMARY KEY, name VARCHAR (50), email VARCHAR (50), phoneNr INTEGER NOT NULL);

CREATE TABLE Orders (orderID INTEGER PRIMARY KEY, numberOfTickets INTEGER NOT NULL, orderDateAndTime DATETIME, customerID INTEGER NOT NULL, CONSTRAINT Orders_FK FOREIGN KEY(customerID) REFERENCES Customer(customerID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Ticket (ticketID INTEGER PRIMARY KEY, startLoc VARCHAR(30), endLoc VARCHAR(30), seatNr INTEGER NOT NULL, orderID INTEGER NOT NULL, routeID INTEGER NOT NULL, CONSTRAINT Ticket_FK FOREIGN KEY(orderID) REFERENCES Orders(orderID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT Ticket_FK FOREIGN KEY(routeID) REFERENCES TrainRoute(routeID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Tracks(trackID INTEGER PRIMARY KEY, startOfTrack VARCHAR(30), endOfTrack VARCHAR(30));

CREATE TABLE TrainRoute(routeID INTEGER PRIMARY KEY, dateAndTime DATETIME, startOfRoute VARCHAR(30), endOfRoute VARCHAR(30), trackID INTEGER NOT NULL, CONSTRAINT TrainRoute_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Operator(operatorID INTEGER PRIMARY KEY, numberOfCarts INTEGER NOT NULL,TrainType VARCHAR(30) , name VARCHAR(30), routeID INTEGER NOT NULL, CONSTRAINT Operator_FK FOREIGN KEY(routeID) REFERENCES TrainRoute(routeID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Carts(cartsID INTEGER PRIMARY KEY, type VARCHAR(30), name VARCHAR(30), operatorID INTEGER NOT NULL, CONSTRAINT Carts_FK FOREIGN KEY(operatorID) REFERENCES Operator(operatorID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Station(name VARCHAR(30) PRIMARY KEY, altitude INTEGER, district VARCHAR(30));

CREATE TABLE StationsOnRoute(routeID INTEGER NOT NULL, name VARCHAR(30), arrivalTime TIME, departureTime TIME, weekday VARCHAR(10), CONSTRAINT StationsOnRoute_PK PRIMARY KEY(routeID,name), CONSTRAINT StationsOnRoute_FK FOREIGN KEY(routeID) REFERENCES TrainRoute(routeID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT StationsOnRoute_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE TrackSection(sectionID INTEGER PRIMARY KEY, trackType VARCHAR(10), length INTEGER NOT NULL, startStation VARCHAR(30), endStation VARCHAR(30), CONSTRAINT TrackSection_FK FOREIGN KEY(startStation) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT TrackSection_FK FOREIGN KEY(endStation) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ReservedSeat(ticketID INTEGER NOT NULL, cartsID INTEGER NOT NULL, sectionID INTEGER NOT NULL, CONSTRAINT ReservedSeat_PK PRIMARY KEY(ticketID,cartsID,sectionID), CONSTRAINT ReservedSeat_FK FOREIGN KEY(ticketID) REFERENCES Ticket(ticketID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT ReservedSeat_FK FOREIGN KEY(cartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT ReservedSeat_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Visits(trackID INTEGER NOT NULL, name VARCHAR(30), CONSTRAINT Visits_PK PRIMARY KEY(trackID,name), CONSTRAINT Visits_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT Visits_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE SectionStation(name VARCHAR(30), sectionID INTEGER NOT NULL, CONSTRAINT SectionStation_PK PRIMARY KEY(name,sectionID), CONSTRAINT SectionStation_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT SectionStation_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Sleeping(sleepCartsID INTEGER PRIMARY KEY, numberOfCompartments INTEGER NOT NULL, numberOfBeds INTEGER NOT NULL, CONSTRAINT Sleeping_FK FOREIGN KEY(sleepCartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Chair(chairCartsID INTEGER PRIMARY KEY, numberOfSeats INTEGER NOT NULL, CONSTRAINT Chair_FK FOREIGN KEY(chairCartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE consistsOf(sectionID INTEGER NOT NULL, trackID INTEGER NOT NULL, CONSTRAINT consistsOf_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT consistsOf_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE);
