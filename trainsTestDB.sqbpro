<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/johan/OneDrive/Documents/Informatikk/2Semester/Databaser/prosjekt.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="5315"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainCarts"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Carts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="87"/><column index="2" value="61"/><column index="3" value="68"/><column index="4" value="124"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="100"/><column index="2" value="153"/><column index="3" value="61"/><column index="4" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="86"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="featuredOn" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="85"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="song" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="68"/><column index="3" value="98"/><column index="4" value="61"/><column index="5" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="songOnAlbum" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="100"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE Customer (customerID INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR (50), email VARCHAR (50), phoneNr INTEGER NOT NULL);

CREATE TABLE Orders (orderID INTEGER PRIMARY KEY AUTOINCREMENT, numberOfTickets INTEGER NOT NULL, orderDateAndTime DATETIME, customerID INTEGER NOT NULL, CONSTRAINT Orders_FK FOREIGN KEY(customerID) REFERENCES Customer(customerID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Ticket (ticketID INTEGER PRIMARY KEY AUTOINCREMENT, startLoc VARCHAR(30), endLoc VARCHAR(30), seatNr INTEGER NOT NULL, orderID INTEGER NOT NULL, routeID INTEGER NOT NULL, CONSTRAINT Ticket_FK FOREIGN KEY(orderID) REFERENCES Orders(orderID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT Ticket_FK FOREIGN KEY(routeID) REFERENCES TrainRoute(routeID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Tracks(trackID INTEGER PRIMARY KEY AUTOINCREMENT, startOfTrack VARCHAR(30), endOfTrack VARCHAR(30));

CREATE TABLE TrainRoute(routeID INTEGER PRIMARY KEY AUTOINCREMENT, dateAndTime DATETIME, trackID INTEGER NOT NULL, operatorID INTEGER NOT NULL, CONSTRAINT TrainRoute_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT TrainRoute_FK FOREIGN KEY(operatorID) REFERENCES Operator(operatorID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Operator(operatorID INTEGER PRIMARY KEY AUTOINCREMENT,TrainType VARCHAR(30) , name VARCHAR(30));

CREATE TABLE Carts(cartsID INTEGER PRIMARY KEY AUTOINCREMENT, type VARCHAR(30), name VARCHAR(30), operatorID INTEGER NOT NULL, CONSTRAINT Carts_FK FOREIGN KEY(operatorID) REFERENCES Operator(operatorID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Station(name VARCHAR(30) PRIMARY KEY, altitude INTEGER, district VARCHAR(30));

CREATE TABLE StationsOnRoute(routeID INTEGER NOT NULL, name VARCHAR(30), arrivalTime TIME, departureTime TIME, weekday VARCHAR(10), CONSTRAINT StationsOnRoute_PK PRIMARY KEY(routeID,name), CONSTRAINT StationsOnRoute_FK FOREIGN KEY(routeID) REFERENCES TrainRoute(routeID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT StationsOnRoute_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE TrackSection(sectionID INTEGER PRIMARY KEY AUTOINCREMENT, trackType VARCHAR(10), length INTEGER NOT NULL, startStation VARCHAR(30), endStation VARCHAR(30), CONSTRAINT TrackSection_FK FOREIGN KEY(startStation) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT TrackSection_FK FOREIGN KEY(endStation) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ReservedSeat(ticketID INTEGER NOT NULL, cartsID INTEGER NOT NULL, sectionID INTEGER NOT NULL, CONSTRAINT ReservedSeat_PK PRIMARY KEY(ticketID,cartsID,sectionID), CONSTRAINT ReservedSeat_FK FOREIGN KEY(ticketID) REFERENCES Ticket(ticketID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT ReservedSeat_FK FOREIGN KEY(cartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT ReservedSeat_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Visits(trackID INTEGER NOT NULL, name VARCHAR(30), CONSTRAINT Visits_PK PRIMARY KEY(trackID,name), CONSTRAINT Visits_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT Visits_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE SectionStation(name VARCHAR(30), sectionID INTEGER NOT NULL, CONSTRAINT SectionStation_PK PRIMARY KEY(name,sectionID), CONSTRAINT SectionStation_FK FOREIGN KEY(name) REFERENCES Station(name) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT SectionStation_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Sleeping(sleepCartsID INTEGER PRIMARY KEY, numberOfCompartments INTEGER NOT NULL, numberOfBeds INTEGER NOT NULL, CONSTRAINT Sleeping_FK FOREIGN KEY(sleepCartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Chair(chairCartsID INTEGER PRIMARY KEY, numberOfSeats INTEGER NOT NULL, CONSTRAINT Chair_FK FOREIGN KEY(chairCartsID) REFERENCES Carts(cartsID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE consistsOf(sectionID INTEGER NOT NULL, trackID INTEGER NOT NULL, CONSTRAINT consistsOf_FK FOREIGN KEY(sectionID) REFERENCES TrackSection(sectionID) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT consistsOf_FK FOREIGN KEY(trackID) REFERENCES Tracks(trackID) ON DELETE CASCADE ON UPDATE CASCADE);
</sql><current_tab id="0"/></tab_sql></sqlb_project>